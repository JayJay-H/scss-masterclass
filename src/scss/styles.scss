@import "_variables";
@import "_extends";

body {
	font-family: 'Inria Serif', serif;
}

main {
	width: 90%;
	margin-top: 255px;
	box-sizing: border-box;
	.main__title {
		width: 90%;
		height: 55vh;
		padding: 0 $padding-size;
		.logo {
			position: fixed;
			top: 60px;
			left: 50px;
			width: 60px;
			height: 60px;
			border-radius: 50%;
			border: 2px solid black;
			display: flex;
			justify-content: center;
			align-items: center;
			cursor: pointer;
			span {
				position: absolute;
				top: 17%;
				left: 30%;
				font-size: 40px;
				text-align: center;
			}
		}
		h1 {
			font-size: 70px;
			width: 75%;
			line-height: 1.3;
			margin-bottom: 140px;
		}
	}
	.main__img {
		width: 100%;
		height: 100vh;
		background-image: url(https://source.unsplash.com/random);
		background-size: cover;
	}
	.main-contents {
		padding: 160px $padding-size;
		box-sizing: border-box;
		h1 {
			font-size: 120px;
			line-height: 1.3;
			width: 50%;
			margin-bottom: 95px;
		}
		.main-contents__gallery {
			display: flex;
			justify-content: space-between;
			.main-content {
				width: 30%;
				height: 80%;
				.main-content__img {
					width: 100%;
					height: 65vh;
					background-size: cover;
					margin-bottom: 40px;
				}
				p {
					font-family: 'Ubuntu Mono', monospace;
					font-size: 15px;
					line-height: 1.5;
				}
			}
		}
	}
}


.main-event {
	padding: 0 $padding-size;
	.main-event__header {
		width: 90%;
		padding: 70px $padding-size;
		display: flex;
		justify-content: center;
		align-items: center;
		h1 {
			font-size: 100px;
			width: 30%;
			text-align: center;
		}
	}
	.main-event__row {
		position: relative;
		width: 90%;
		padding: 75px $padding-size 100px;
		display: grid;
		margin-bottom: 130px;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: 1fr;
		background-image: linear-gradient(90deg, black 50%, transparent 0), linear-gradient(90deg, black 50%, transparent 0), linear-gradient(90deg, black 50%, transparent 0), linear-gradient(90deg, black 50%, transparent 0);
		background-position: 0 0, 0 calc(100% - 14px), 0 14px, 0 100%;
		background-size: 24px 1px, 24px 1px, 24px 1px, 24px 1px;
		background-repeat: repeat-x, repeat-x, repeat-x, repeat-x;
		animation: 1s infinite normal move;
		animation-timing-function: linear;
		.main-event__row-item {
			place-self: center center;
			font-family: 'Ubuntu Mono', monospace;
			text-align: center;
			cursor: pointer;
			p {
				margin-top: 25px;
				font-size: 21px;
			}
		}
		a {
			@extend %button;
			position: absolute;
			bottom: -25px;
			left: 50%;
			transform: translateX(-50%);
		}
	}
	.main-address {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		grid-template-rows: 1fr;
		gap: 60px;
		padding: 70px 0;
		.main-address__row {
			@extend %dotted-line;
			display: flex;
			justify-content: center;
			align-items: center;
			padding: 105px 140px;
			span {
				font-size: 60px;
				text-align: center;
			}
		}
	}
}

@keyframes move {
	from {
		background-position-x: 0, 0;
	}
	to {
		background-position-x: 24px, -24px;
	}
}

@keyframes spin {
	from {
		background-position: 0 0, 0 100%, 0 0, 100% 0;
	}
	to {
		background-position: 30px 0, -30px 100%, 0 -30px, 100% 30px;
	}
}

.menu {
	position: fixed;
	top: 0;
	right: 0;
	width: 10vw;
	height: 100vh;
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-template-rows: 1fr;
	.menu__column {
		position: relative;
		cursor: pointer;
		span {
			font-size: 20px;
			position: absolute;
			top: 50%;
			left: 50%;
			transform-origin: center;
			transform: translateY(-50%) translateX(-50%) rotateZ(90deg);
		}
		&:first-child {
			background-color: $blue;
		}
		&:nth-child(2) {
			background-color: $red;
		}
		&:last-child {
			background-color: $yellow;
		}
	}
}

footer {
	width: 90%;
	padding: 0 $padding-size;
	box-sizing: border-box;
	.footer__header {
		display: flex;
		flex-direction: column;
		align-items: center;
		padding: 60px;
		margin-bottom: 60px;
		@extend %stripe-line;
		span {
			font-size: 50px;
			margin-bottom: 30px;
		}
		a {
			@extend %button;
		}
	}
	.footer__contact {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: 1fr;
		gap: 60px;
		margin-bottom: 60px;
		.footer__contact__column {
			@extend %dotted-line;
			display: flex;
			justify-content: center;
			align-items: center;
			padding: 90px 150px;
			span {
				width: 70%;
				text-align: center;
				font-size: 20px;
			}
		}
	}
}

/*
	background-image:
	콤마를 통해 여러개의 이미지 지정 가능

	background-position:
	콤마를 통해 여러개의 위치를 지정가능
	한 position마다 X좌표 Y좌표순으로 space를 통해 구분한다.
	이때 X좌표는 left, right를 사용할 수 있다.
	left는 왼쪽에 딱 붙고, right는 오른쪽에 딱 붙는다.
	Y좌표는 top, bottom을 사용하며 마찬가지로 위, 아래에 붙는다.

	background-image에서 여러개의 이미지를 지정했을 경우
	콤마를 통해 각각의 이미지 위치를 조정 가능하다.

	background-size:
	2개의 value를 사용할 경우 space를 통해
	이미지의 너비, 이미지의 높이 순으로 지정한다.
	콤마를 사용해 여러개의 이미지의 너비와 높이를 지정가능.

	background-repeat:
	background-image에서 특별한 지정을 하지 않을 시, 배경은 반복해서 나타난다.
	이때, repeat속성은 space 를 통해 x좌표, y좌표의 반복을 지정할 수 있다.
	하나의 value만 지정했을 시 자동으로 두개의 좌표에 적용된다.
	1. repeat-x : X좌표는 반복하고, Y좌표는 반복하지 않는다.
	2. repeat-y : 1번의 반대.

	linear-gradient:
	기본적으로 2개의 value를 사용한다고 해보자.
	linear-gradient(red, blue);
	그럼 위에서 아래방향으로 빨간색에서 점차 파란색으로 변한다.
	여기서 색깔의 각도를 조절할 수 있는데,
	각도에 해당하는 value를 맨 처음에 넣으면 된다.
	ex) linear-gradient(50deg, red, blue);

	repeating-linear-gradient:
	이미지를 무조건 반복해서 보여준다는 점을 빼면, linear-gradient와 동일하다.
	중요한건 이를 가지고 줄무늬를 만들 수 있다.
	4개의 value를 사용한다. 방향은 위에서 아래.
	각각 space로 구분하여, 맨 처음은 색깔, 두 번째는 시작점이다.
	만약 비스듬한 검정 줄무늬를 만들고 싶다면.
	repeating-linear-gradient(50deg, red 0, red 1px, blue 1px, blue 4px);
	이렇게 하면된다.
	설명하자면, 위의 요소는 위에서부터 0~1px까지는 빨간색,
	1px~4px까지는 파란색으로 나타내지고, 이게 반복적으로 나타난다.
*/